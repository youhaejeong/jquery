<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.yedam.myserver.emp.mapper.EmployeeMapper">

<resultMap type="jobs" id="jobEmployeeMap">
	<collection property="employees" 
				javaType="ArrayList" 
				column="job_id" 
				ofType="Employee" 
				select="findJobEmployees"></collection>

</resultMap>
	<select id="findJobs" resultMap="jobEmployeeMap">
		select job_id, job_title
		from jobs
		order by job_id
	</select>
	<select id="findJobEmployees" resultType="employee">
		select *
		from employees
		where job_id = #{job_id}
		order by job_id
	</select>




	<resultMap type="employee" id="employeeMapSelect">
		<association property="department" column="department_id"
			javaType="Departments" select="findDepartment"></association>
	</resultMap>

	<select id="findDepartment" resultType="departments">
		SELECT *
		FROM DEPARTMENTS
		WHERE DEPARTMENT_ID = #{department_id}
	</select>

	<resultMap type="employee" id="employeeMap">
		<id column="employee_id" property="employee_id" /> <!-- 기본키 정보 컬럼은 대소문자 구분 노 프로퍼티는 대소문자 고분 예스 -->
		<result column="first_name" property="first_name" /> <!-- 일반키 정보 -->
		<result column="email" property="email" />
		<association property="department">
			<id column="department_id" property="department_id" />
			<result column="DEPARTMENT_NAME" property="department_name" />
			<result column="LOCATION_ID" property="location_id" />
			<!-- <result column="MANAGER_ID" property="manager_id"/> -->
		</association>
	</resultMap>

	<select id="findEmployees" resultMap="employeeMapSelect">
		SELECT E.*
		FROM EMPLOYEES E
		ORDER BY EMPLOYEE_ID
	</select>

	<insert id="persist">
		insert into employees (
		employee_id,
		first_name,
		last_name,
		email,
		hire_date,
		job_id
		) values (
		#{employee_id},
		#{first_name},
		#{last_name},
		#{email},
		#{hire_date},
		#{job_id}
		)
	</insert>

	<insert id="remove">
		delete from employees
		where employee_id = #{employee_id}
	</insert>

	<update id="merge">
		update employees
		set first_name = #{first_name},
		last_name = #{last_name},
		email = #{email},
		phone_number = #{phone_number},
		job_id = #{job_id},
		salary = #{salary}
		where employee_id = #{employee_id}
	</update>



	<select id="findDepartments" resultType="departments">
		select a.department_id, a.department_name
		from departments a
		order by a.department_id
	</select>

	<select id="empStat" resultType="map"> <!-- map.put("deptId", 10) -->
		SELECT DEPARTMENT_ID "deptId"
		, COUNT(*) "cnt"
		FROM EMPLOYEES
		WHERE DEPARTMENT_ID IS NOT NULL
		GROUP BY DEPARTMENT_ID
	</select>

</mapper>